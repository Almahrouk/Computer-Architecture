// D filp-flop
// rising-edge , folling-edge

// Qa chek on all range on Clk when Clk = 1 ===> Copy Signal Of D and stay
// Qb Chek when Clk is up-edge (same of D value) 
// Qc chek when Clk is down-edge (same of D value)





module testbench ();
	reg Clk_tb;
	reg D_tb;
	wire Qa_tb;
	wire Qb_tb;
	wire Qc_tb;
	
	initial
		begin: CLOCK_GENERATOR
			Clk_tb = 0;
			forever
				begin
					#30 Clk_tb = ~Clk_tb;
				end
		end
	
	initial
		begin
			D_tb <= 0;
			#20 D_tb <= 1;
			#20 D_tb <= 0;
			#5 D_tb <= 1;
			#10 D_tb <= 0;
			#10 D_tb <= 1;
			#10 D_tb <= 0;
			#5 D_tb <= 1;
			#5 D_tb <= 0;
			#10 D_tb <= 1;
			#5 D_tb <= 0;
			#5 D_tb <= 1;
			#20 D_tb <= 0;
		end
		
  part4 p4 (Clk_tb, D_tb, Qa_tb, Qb_tb, Qc_tb); 
	
  
   //Dump waves (only required here)
initial
  begin
    $dumpfile("dump.vcd");
    $dumpvars(1);
  end

initial #200 $finish;
 
endmodule