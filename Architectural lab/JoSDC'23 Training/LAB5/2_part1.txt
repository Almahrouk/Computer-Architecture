// FBGA
module part1(KEY, LEDR);
	input [1:0] KEY;
	output [9:0] LEDR;

	wire Clock, Reset_n, rollover;
	wire [4:0] Q;  // k=20 ==> need 5-bits

	
	assign Clock = KEY[1];
	assign Reset_n = KEY[0];

	assign LEDR[4:0] = Q;
	assign LEDR[9] = rollover;

	// Call
	counter my_counter(Clock, Reset_n, Q, rollover);
	defparam my_counter.n = 5;
	defparam my_counter.k = 20;

endmodule








module counter(Clock, Reset_n, Q, rollover);
	parameter n = 4; // size of the counter (#bit)
	parameter k = 8;

	input Clock, Reset_n;
	output [n-1:0] Q; // n-bit counter
	reg [n-1:0] Q;
	output rollover;


	always @(posedge Clock or negedge Reset_n)
		if(!Reset_n)
			Q <= 'd0; // Reset The Timer
		else
			if(Q == k-1)
				Q <= 'd0; // Reset The Timer
			else
				Q <= Q + 1'b1; // Incremant The Timer By 1

	assign rollover = (Q == k-1) ? 1'b1 : 1'b0;

endmodule


// End Coding

// Assignments -> Pin Planner 
// Tools -> programmer




